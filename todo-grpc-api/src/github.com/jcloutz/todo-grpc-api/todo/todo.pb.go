// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todo.proto

/*
Package todo is a generated protocol buffer package.

It is generated from these files:
	todo.proto

It has these top-level messages:
	TodoCreateRequest
	TodoFilter
	TodoUpdateRequest
	TodoResponse
*/
package todo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TodoCreateRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Complete bool   `protobuf:"varint,2,opt,name=complete" json:"complete,omitempty"`
}

func (m *TodoCreateRequest) Reset()                    { *m = TodoCreateRequest{} }
func (m *TodoCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*TodoCreateRequest) ProtoMessage()               {}
func (*TodoCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TodoCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TodoCreateRequest) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

type TodoFilter struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *TodoFilter) Reset()                    { *m = TodoFilter{} }
func (m *TodoFilter) String() string            { return proto.CompactTextString(m) }
func (*TodoFilter) ProtoMessage()               {}
func (*TodoFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TodoFilter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TodoUpdateRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Complete bool   `protobuf:"varint,3,opt,name=complete" json:"complete,omitempty"`
}

func (m *TodoUpdateRequest) Reset()                    { *m = TodoUpdateRequest{} }
func (m *TodoUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*TodoUpdateRequest) ProtoMessage()               {}
func (*TodoUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TodoUpdateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TodoUpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TodoUpdateRequest) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

type TodoResponse struct {
	Id        string                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name      string                     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Complete  bool                       `protobuf:"varint,3,opt,name=complete" json:"complete,omitempty"`
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=updatedAt" json:"updatedAt,omitempty"`
}

func (m *TodoResponse) Reset()                    { *m = TodoResponse{} }
func (m *TodoResponse) String() string            { return proto.CompactTextString(m) }
func (*TodoResponse) ProtoMessage()               {}
func (*TodoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TodoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TodoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TodoResponse) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

func (m *TodoResponse) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *TodoResponse) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*TodoCreateRequest)(nil), "todo.TodoCreateRequest")
	proto.RegisterType((*TodoFilter)(nil), "todo.TodoFilter")
	proto.RegisterType((*TodoUpdateRequest)(nil), "todo.TodoUpdateRequest")
	proto.RegisterType((*TodoResponse)(nil), "todo.TodoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Todo service

type TodoClient interface {
	GetTodos(ctx context.Context, in *TodoFilter, opts ...grpc.CallOption) (Todo_GetTodosClient, error)
	CreateTodo(ctx context.Context, in *TodoCreateRequest, opts ...grpc.CallOption) (*TodoResponse, error)
	UpdateTodo(ctx context.Context, in *TodoUpdateRequest, opts ...grpc.CallOption) (*TodoResponse, error)
}

type todoClient struct {
	cc *grpc.ClientConn
}

func NewTodoClient(cc *grpc.ClientConn) TodoClient {
	return &todoClient{cc}
}

func (c *todoClient) GetTodos(ctx context.Context, in *TodoFilter, opts ...grpc.CallOption) (Todo_GetTodosClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Todo_serviceDesc.Streams[0], c.cc, "/todo.Todo/GetTodos", opts...)
	if err != nil {
		return nil, err
	}
	x := &todoGetTodosClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Todo_GetTodosClient interface {
	Recv() (*TodoResponse, error)
	grpc.ClientStream
}

type todoGetTodosClient struct {
	grpc.ClientStream
}

func (x *todoGetTodosClient) Recv() (*TodoResponse, error) {
	m := new(TodoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *todoClient) CreateTodo(ctx context.Context, in *TodoCreateRequest, opts ...grpc.CallOption) (*TodoResponse, error) {
	out := new(TodoResponse)
	err := grpc.Invoke(ctx, "/todo.Todo/CreateTodo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) UpdateTodo(ctx context.Context, in *TodoUpdateRequest, opts ...grpc.CallOption) (*TodoResponse, error) {
	out := new(TodoResponse)
	err := grpc.Invoke(ctx, "/todo.Todo/UpdateTodo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Todo service

type TodoServer interface {
	GetTodos(*TodoFilter, Todo_GetTodosServer) error
	CreateTodo(context.Context, *TodoCreateRequest) (*TodoResponse, error)
	UpdateTodo(context.Context, *TodoUpdateRequest) (*TodoResponse, error)
}

func RegisterTodoServer(s *grpc.Server, srv TodoServer) {
	s.RegisterService(&_Todo_serviceDesc, srv)
}

func _Todo_GetTodos_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TodoFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TodoServer).GetTodos(m, &todoGetTodosServer{stream})
}

type Todo_GetTodosServer interface {
	Send(*TodoResponse) error
	grpc.ServerStream
}

type todoGetTodosServer struct {
	grpc.ServerStream
}

func (x *todoGetTodosServer) Send(m *TodoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Todo_CreateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TodoCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).CreateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.Todo/CreateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).CreateTodo(ctx, req.(*TodoCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_UpdateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TodoUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).UpdateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.Todo/UpdateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).UpdateTodo(ctx, req.(*TodoUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Todo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "todo.Todo",
	HandlerType: (*TodoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTodo",
			Handler:    _Todo_CreateTodo_Handler,
		},
		{
			MethodName: "UpdateTodo",
			Handler:    _Todo_UpdateTodo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetTodos",
			Handler:       _Todo_GetTodos_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "todo.proto",
}

func init() { proto.RegisterFile("todo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0xc1, 0x4e, 0x83, 0x40,
	0x10, 0x86, 0x5d, 0x44, 0xd3, 0x8e, 0xc6, 0xe8, 0x5c, 0x24, 0xc4, 0x44, 0xc2, 0x89, 0x13, 0x35,
	0xd5, 0x83, 0x89, 0x27, 0xd3, 0x44, 0xef, 0x58, 0x1f, 0x80, 0x76, 0xc7, 0x86, 0x04, 0x3a, 0x08,
	0xc3, 0xab, 0xf9, 0x00, 0x3e, 0x99, 0xd9, 0x45, 0xc0, 0x92, 0x1a, 0x0f, 0xde, 0x66, 0x37, 0xff,
	0x37, 0x7f, 0xe6, 0xff, 0x01, 0x84, 0x35, 0xc7, 0x65, 0xc5, 0xc2, 0xe8, 0x9a, 0xd9, 0xbf, 0xde,
	0x30, 0x6f, 0x72, 0x9a, 0xd9, 0xbf, 0x55, 0xf3, 0x36, 0x93, 0xac, 0xa0, 0x5a, 0xd2, 0xa2, 0x6c,
	0x65, 0xe1, 0x02, 0x2e, 0x96, 0xac, 0x79, 0x51, 0x51, 0x2a, 0x94, 0xd0, 0x7b, 0x43, 0xb5, 0x20,
	0x82, 0xbb, 0x4d, 0x0b, 0xf2, 0x54, 0xa0, 0xa2, 0x69, 0x62, 0x67, 0xf4, 0x61, 0xb2, 0xe6, 0xa2,
	0xcc, 0x49, 0xc8, 0x73, 0x02, 0x15, 0x4d, 0x92, 0xfe, 0x1d, 0x5e, 0x01, 0x98, 0x25, 0x4f, 0x59,
	0x2e, 0x54, 0xe1, 0x19, 0x38, 0x99, 0xfe, 0x66, 0x9d, 0x4c, 0x87, 0x2f, 0xad, 0xc5, 0x6b, 0xa9,
	0x7f, 0x58, 0x8c, 0x44, 0xbd, 0xa5, 0xf3, 0x8b, 0xe5, 0xe1, 0xc8, 0xf2, 0x53, 0xc1, 0xa9, 0xd9,
	0x9a, 0x50, 0x5d, 0xf2, 0xb6, 0xa6, 0xff, 0x2e, 0xc4, 0x7b, 0x98, 0xae, 0x6d, 0x08, 0xfa, 0x51,
	0x3c, 0x37, 0x50, 0xd1, 0xc9, 0xdc, 0x8f, 0xdb, 0xf4, 0xe2, 0x2e, 0xbd, 0x78, 0xd9, 0xa5, 0x97,
	0x0c, 0x62, 0x43, 0x36, 0xf6, 0x36, 0x43, 0x1e, 0xfd, 0x4d, 0xf6, 0xe2, 0xf9, 0x87, 0x02, 0xd7,
	0x1c, 0x81, 0x77, 0x30, 0x79, 0x26, 0x31, 0x63, 0x8d, 0xe7, 0xb1, 0x6d, 0x71, 0x08, 0xd4, 0xc7,
	0xe1, 0xa7, 0x3b, 0x37, 0x3c, 0xb8, 0x51, 0xf8, 0x00, 0xd0, 0xf6, 0x66, 0x77, 0x5c, 0x0e, 0xaa,
	0x9d, 0x36, 0xf7, 0xe3, 0x06, 0x6e, 0x1b, 0x19, 0xc3, 0x3b, 0x3d, 0xed, 0x87, 0x57, 0xc7, 0xf6,
	0xae, 0xdb, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x32, 0x44, 0xf7, 0xdf, 0x71, 0x02, 0x00, 0x00,
}
